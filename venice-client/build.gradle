apply plugin: 'java-library'

task buildJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Venice Client',
        'Implementation-Version': version
  }
  baseName = project.name
  from { configurations.implementation
      .filter {!it.absolutePath.endsWith(".xml")} // Resolves Could not expand ZIP '.../pegasus-d2-client-factory-cmpt-def-16.0.23.xml'.
      .collect { it.isDirectory() ? it : zipTree(it) } }
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
  with jar
}

dependencies {
  implementation project(':venice-schema-common')
  implementation project(':venice-thin-client')
  implementation project(':da-vinci-client')

  // For helix-based metadata impl, and this will be removed before onboarding any customers.
  implementation project(':venice-common')
  implementation (libraries.helix) {
    // Helix pulls in an ancient version of the zkclient, which lacks some APIs and clashes with Kafka's dependency
    exclude group: 'com.github.sgroschupf'
    // Helix use zk 3.6.9, which introduce netty 3.10 and will fail our test.
    exclude module: 'zookeeper'
  }
  implementation project(':venice-router')
  implementation libraries.routerApi

  implementation libraries.r2Client

  implementation libraries.ddsStorageCommonBase

  testImplementation project(':venice-common')
  testImplementation project(':venice-test-common')
  testImplementation libraries.kafkaClients
}
