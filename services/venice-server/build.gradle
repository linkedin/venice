plugins {
  id 'application'
  id 'com.github.johnrengelman.shadow'
  id 'com.google.protobuf'
}

application {
  mainClassName = 'com.linkedin.venice.server.VeniceServer'
}
installDist.dependsOn test

dependencies {
  implementation project(':internal:venice-common')
  implementation project(':clients:da-vinci-client')

  implementation (project(':internal:alpini:common:alpini-common-base')) { // for SslFactory
    exclude group: 'com.oracle', module: 'ojdbc14' // unused transitive dependency, doesn't exist in repo
    exclude group: 'xerces', module: 'xerces' // resolve conflicting transitive dependency
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'// resolve conflicting transitive dependency
  }

  implementation (project(':internal:alpini:netty4:alpini-netty4-base')) { // for SSL Initializer
    exclude group: 'com.oracle', module: 'ojdbc14' // unused transitive dependency, doesn't exist in repo
    exclude group: 'xerces', module: 'xerces' // resolve conflicting transitive dependency
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'// resolve conflicting transitive dependency
  }

  implementation (project(':internal:alpini:router:alpini-router-base')) {
    exclude group: 'javax.servlet'
    exclude group: 'org.mockito', module: 'mockito-all'
  }

  implementation (project(':clients:venice-thin-client')) {
    exclude group: 'org.jboss.netty' // venice-common's exclusion of netty 3.2.1 isn't respected
  }

  implementation libraries.avroUtilFastserde
  implementation libraries.commonsIo
  implementation libraries.conscrypt
  implementation (project(':internal:alpini:netty4:alpini-netty4-base'))
  implementation libraries.helix
  implementation libraries.fastUtil
  implementation libraries.httpAsyncClient
  implementation libraries.kafkaClients
  implementation libraries.log4j2core
  implementation libraries.netty
  implementation libraries.rocksdbjni
  implementation libraries.tehuti
  // It's necessary to pull in the most recent version of zkclient explicitly, otherwise Helix won't have it...
  implementation libraries.zkclient

  implementation libraries.grpcNettyShaded
  implementation libraries.grpcProtobuf
  implementation libraries.grpcStub
  compileOnly libraries.tomcatAnnotations
  implementation libraries.guava

  testImplementation libraries.fastUtil
  testImplementation project(':internal:alpini:router:alpini-router-api')
  testImplementation project(':services:venice-router')
}

jar {
  manifest {
    attributes = [
        'Implementation-Title': 'Venice Server',
        'Implementation-Version': project.version,
        'Main-Class': application.mainClass.get()
    ]
  }
}

def grpcVersion = '1.54.1'
def protobufVersion = '3.21.7'

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:' + protobufVersion
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:' + grpcVersion
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

ext {
  jacocoCoverageThreshold = 0.23
}

