dependencies {
  implementation (project(':internal:venice-common')) {
    exclude module: 'kafka_2.10'
    exclude module: 'kafka_2.11'
    exclude group: 'org.conscrypt'
    exclude group: 'org.scala-lang'
  }

  implementation (project(':internal:alpini:common:alpini-common-base')) { // for SslFactory
    exclude group: 'com.oracle', module: 'ojdbc14' // unused transitive dependency, doesn't exist in repo
    exclude group: 'xerces', module: 'xerces' // resolve conflicting transitive dependency
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'// resolve conflicting transitive dependency
  }

  implementation (project(':internal:alpini:netty4:alpini-netty4-base')) { // for SSL Initializer
    exclude group: 'com.oracle', module: 'ojdbc14' // unused transitive dependency, doesn't exist in repo
    exclude group: 'xerces', module: 'xerces' // resolve conflicting transitive dependency
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'// resolve conflicting transitive dependency
  }

  implementation project(':clients:venice-thin-client')

  implementation libraries.avroUtilFastserde
  implementation libraries.caffeine
  implementation libraries.fastUtil
  implementation libraries.helix
  implementation libraries.httpAsyncClient
  implementation libraries.kafka
  implementation libraries.kafkaClients
  implementation libraries.rocksdbjni
  implementation libraries.zkclient // It's necessary to pull in the most recent version of zkclient explicitly, otherwise Helix won't have it...

  testImplementation project(':internal:venice-test-common')
  testImplementation libraries.kafkaClientsTest
}

ext {
  jacocoCoverageThreshold = 0.40
}
