plugins {
  id 'com.github.johnrengelman.shadow'
}

dependencies {
  implementation(libraries.avro) {
    exclude group: 'org.mortbay.jetty' // jetty 6 conflicts with spark-java used in controller api
  }

  implementation project(':internal:venice-common')
  implementation project(':services:venice-controller')
  implementation project(':clients:venice-thin-client')

  implementation libraries.commonsCli
  implementation libraries.kafka
  implementation libraries.log4j2api
}

apply from: "$rootDir/gradle/helper/publishing.gradle"
apply from: "$rootDir/gradle/helper/packaging.gradle"

artifacts {
  archives shadowJar
}

jar {
  manifest {
    attributes = ['Implementation-Title'  : 'Venice Admin Tool',
                  'Implementation-Version': project.version,
                  'Main-Class'            : 'com.linkedin.venice.AdminTool']
  }
}

//"fat" sources jar
task sourceJar(type: Jar, dependsOn: classes) {
  duplicatesStrategy = DuplicatesStrategy.WARN
  // we return here a closure to do this lazy, after all projects are configured by gradle
  from { packaging.collectSourceSetsIncludingSubmodules(project) }
}

def artifactName = "venice-admin-tool"
publishing.configureShadowArtifactPublishing(project, artifactName, shadowJar, sourceJar, testJar)
