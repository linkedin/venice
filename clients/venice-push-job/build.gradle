plugins {
  id 'com.github.johnrengelman.shadow'
}

dependencies {
  implementation (project(':internal:venice-common')) {
    exclude module: ':internal:alpini'
  }

  implementation (libraries.avro) {
    exclude group: 'org.mortbay.jetty' // jetty 6 conflicts with spark-java used in controller api
  }

  implementation (libraries.avroMapred) {
    exclude group: 'org.mortbay.jetty'
  }

  implementation (libraries.mapreduceClientCore) {
    exclude group: 'org.apache.avro'
    exclude group: 'javax.servlet'
  }

  implementation (libraries.hadoopCommon) {
    // Exclude transitive dependency
    exclude group: 'org.apache.avro'
    exclude group: 'javax.servlet'
  }

  implementation project(':clients:venice-thin-client') // Needed by the Post Bulk-load Analysis Job

  implementation libraries.commonsIo
  implementation libraries.fastUtil
  implementation libraries.jacksonCore
  implementation libraries.jdom
  implementation libraries.joptSimple
  implementation libraries.kafka
  implementation libraries.kafkaClients
  implementation libraries.log4j2api
  implementation libraries.xalan
  implementation libraries.xerces
  implementation libraries.zstd

  runtimeOnly libraries.commonsConfiguration
  runtimeOnly libraries.commonsLang
  runtimeOnly libraries.httpCore
  runtimeOnly libraries.httpClient
}

apply from: "$rootDir/gradle/helper/publishing.gradle"
apply from: "$rootDir/gradle/helper/packaging.gradle"

jar {
  manifest {
    attributes 'Main-Class': 'com.linkedin.venice.hadoop.VenicePushJob'
  }
}

ext {
  jacocoCoverageThreshold = 0.39
}
