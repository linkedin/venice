/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.read.protocol.response.streaming;

@SuppressWarnings("all")
/** This record will store all the additional info after sending out streaming response */
public class StreamingFooterRecordV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"StreamingFooterRecordV1\",\"namespace\":\"com.linkedin.venice.read.protocol.response.streaming\",\"fields\":[{\"name\":\"status\",\"type\":\"int\",\"doc\":\"Final HTTP status code (non-200) after processing the streaming request completely\"},{\"name\":\"detail\",\"type\":\"bytes\",\"doc\":\"Error detail\"},{\"name\":\"trailerHeaders\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Additional headers after sending out response headers\"}]}");
  /** Final HTTP status code (non-200) after processing the streaming request completely */
  public int status;
  /** Error detail */
  public java.nio.ByteBuffer detail;
  /** Additional headers after sending out response headers */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> trailerHeaders;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return status;
    case 1: return detail;
    case 2: return trailerHeaders;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: status = (java.lang.Integer)value$; break;
    case 1: detail = (java.nio.ByteBuffer)value$; break;
    case 2: trailerHeaders = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
