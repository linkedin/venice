/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.compute.protocol.request;

@SuppressWarnings("all")
public class Count extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"Count\",\"namespace\":\"com.linkedin.venice.compute.protocol.request\",\"fields\":[{\"name\":\"field\",\"type\":\"string\",\"doc\":\"The field name in the original value record of type array, which will used to execute count operation on\"},{\"name\":\"resultFieldName\",\"type\":\"string\",\"doc\":\"The field name used to store the count operation result\"}]}");
  /** The field name in the original value record of type array, which will used to execute count operation on */
  public java.lang.CharSequence field;
  /** The field name used to store the count operation result */
  public java.lang.CharSequence resultFieldName;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return field;
    case 1: return resultFieldName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: field = (java.lang.CharSequence)value$; break;
    case 1: resultFieldName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
