/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.compute.protocol.request;

@SuppressWarnings("all")
/** This record only contains the operations and result schema, and keys will be appended after during serialization */
public class ComputeRequestV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"ComputeRequestV2\",\"namespace\":\"com.linkedin.venice.compute.protocol.request\",\"fields\":[{\"name\":\"operations\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"ComputeOperation\",\"fields\":[{\"name\":\"operationType\",\"type\":\"int\",\"doc\":\"Supported operation type: 0 -> DotProduct\"},{\"name\":\"operation\",\"type\":[{\"type\":\"record\",\"name\":\"DotProduct\",\"fields\":[{\"name\":\"field\",\"type\":\"string\",\"doc\":\"The field in the original value record, which will used to execute dot-product calculation\"},{\"name\":\"dotProductParam\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"doc\":\"The passed feature vector, which will be used to execute dot-product calculation against the field in the original value record\"},{\"name\":\"resultFieldName\",\"type\":\"string\",\"doc\":\"The field name used to store the calculated result\"}]},{\"type\":\"record\",\"name\":\"CosineSimilarity\",\"fields\":[{\"name\":\"field\",\"type\":\"string\",\"doc\":\"The field in the original value record, which will used to execute cosine-similarity calculation\"},{\"name\":\"cosSimilarityParam\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"doc\":\"The passed feature vector, which will be used to execute cosine-similarity calculation against the field in the original value record\"},{\"name\":\"resultFieldName\",\"type\":\"string\",\"doc\":\"The field name used to store the calculated result\"}]},{\"type\":\"record\",\"name\":\"HadamardProduct\",\"fields\":[{\"name\":\"field\",\"type\":\"string\",\"doc\":\"The field in the original value record, which will used to execute hadamard-product calculation\"},{\"name\":\"hadamardProductParam\",\"type\":{\"type\":\"array\",\"items\":\"float\"},\"doc\":\"The passed feature vector, which will be used to execute hadamard-product calculation against the field in the original value record\"},{\"name\":\"resultFieldName\",\"type\":\"string\",\"doc\":\"The field name used to store the calculated result\"}]}]}]}]}},{\"name\":\"resultSchemaStr\",\"type\":\"string\",\"doc\":\"The field contains the serialized result schema, which will be used to de-serialize the response returned by Venice\"}]}");
  public java.util.List<java.lang.Object> operations;
  /** The field contains the serialized result schema, which will be used to de-serialize the response returned by Venice */
  public java.lang.CharSequence resultSchemaStr;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return operations;
    case 1: return resultSchemaStr;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: operations = (java.util.List<java.lang.Object>)value$; break;
    case 1: resultSchemaStr = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
