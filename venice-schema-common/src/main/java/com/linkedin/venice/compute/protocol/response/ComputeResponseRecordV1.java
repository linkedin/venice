/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.compute.protocol.response;

@SuppressWarnings("all")
/** This record used to store the response per key */
public class ComputeResponseRecordV1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"ComputeResponseRecordV1\",\"namespace\":\"com.linkedin.venice.compute.protocol.response\",\"fields\":[{\"name\":\"keyIndex\",\"type\":\"int\",\"doc\":\"This index will be used to retrieve the original key from the mapping maintained by Client/Router\"},{\"name\":\"value\",\"type\":\"bytes\",\"doc\":\"The serialized result can be de-serialized by the result schema passed in the compute request\"}]}");
  /** This index will be used to retrieve the original key from the mapping maintained by Client/Router */
  public int keyIndex;
  /** The serialized result can be de-serialized by the result schema passed in the compute request */
  public java.nio.ByteBuffer value;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return keyIndex;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: keyIndex = (java.lang.Integer)value$; break;
    case 1: value = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
