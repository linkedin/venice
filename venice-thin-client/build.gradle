task buildJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Venice Thin Client',
            'Implementation-Version': version,
            'Main-Class': 'com.linkedin.venice.client.store.QueryTool'
  }
  baseName = project.name
  from { configurations.implementation
    .filter {!it.absolutePath.endsWith(".xml")} // Resolves Could not expand ZIP '.../pegasus-d2-client-factory-cmpt-def-16.0.23.xml'.
    .collect { it.isDirectory() ? it : zipTree(it) } }
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
  with jar
}

dependencies {
  api (libraries.avro) {
    exclude group: 'org.jboss.netty' // older version of netty3 causes transitive conflicts with the router
    exclude group: 'org.mortbay.jetty' // jetty 6 conflicts with spark-java used in controller api
    exclude group: 'org.slf4j'        // Avro pulls in slf4j 1.5 which is API incompatible with 1.6
  }
  implementation libraries.asyncHttpClient
  implementation libraries.zookeeper
  implementation (libraries.commonsIo) {
    exclude group: 'org.apapche.zookeeper'
  }
  implementation libraries.jacksonCore
  implementation libraries.jacksonMapper

  // Schema related dependencies
  implementation project(':venice-schema-common')

  testImplementation project(':venice-common')
  testImplementation project(':venice-test-common')
  testImplementation libraries.kafkaClientsTest
  testImplementation libraries.kafkaClients
  testImplementation libraries.netty
}
