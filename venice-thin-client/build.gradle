task buildJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Venice Thin Client',
            'Implementation-Version': version
  }
  baseName = project.name
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

dependencies {
  compile libraries.asyncHttpClient
  compile libraries.guava
  compile libraries.zookeeper
  compile (libraries.commonsIo) {
    exclude group: 'org.apapche.zookeeper'
  }
  compile (libraries.d2Client){
    exclude group: 'com.oracle', module: 'ojdbc14' /* unused transitive dependencies, doesnt exist in repo */
    exclude group: 'org.mockito', module: 'mockito-all'
  }
  // Schema related dependencies
  compile project(':venice-schema-common')

  testCompile project(':venice-common')
  testCompile project(':venice-common').sourceSets.test.output
  testCompile libraries.netty
  testCompile (libraries.d2){
    exclude group: 'com.oracle', module: 'ojdbc14' /* unused transitive dependencies, doesnt exist in repo */
    exclude group: 'org.mockito', module: 'mockito-all'
  }
}
