plugins {
  id 'java-library'
  id 'com.github.johnrengelman.shadow' version '5.2.0'
}

task buildJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Venice Samza',
            'Implementation-Version': version
  }
  baseName = project.name
  from { configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

configurations.implementation.exclude group: 'org.mortbay.jetty' // jetty 6 conflicts with spark-java used in controller api

dependencies {
  implementation libraries.samzaApi
  implementation libraries.kafka

  // Schema related dependencies
  implementation (project(':venice-common')) {
    //TODO, pull venice writer out of venice common so this is a smaller dependency
    exclude module: 'kafka_2.10'
    exclude group: 'org.scala-lang'
  }
  implementation project(':venice-schema-common')
  implementation project(':venice-thin-client')

  testImplementation libraries.log4j2api
}

shadowJar {
  zip64 true
  classifier = null
  dependencies {
    exclude('**/org/**')
    exclude('**/avro/**')
    exclude('**/clojure/**')
    exclude('**/io/**')
    exclude('**/it/unimi/dsi/**')
    exclude('**/jersey/**')
    exclude('**/javax/**')
    exclude('**/mx4j/**')
    exclude('**/oracle/**')
    exclude('**/com/linkedin/avro/**')
    exclude('**/com/linkedin/container/**')
    exclude('**/com/linkedin/d2/**')
    exclude('**/com/linkedin/r2/**')
    exclude('**/com/linkedin/mario/**')
    exclude('**/com/linkedin/events/**')
    exclude('**/com/linkedin/data/**')
    exclude('**/com/linkedin/messages/**')
    exclude('**/com/linkedin/parseq/**')
    exclude('**/com/fasterxml/jackson/**')
    exclude('**/com/google/**')
    exclude('**/com/linkedin/security/**')
    exclude('**/com/linkedin/common/**')
    exclude('**/com/linkedin/restli/**')
    exclude('**/com/linkedin/util/**')
  }
  relocate('com.linkedin.kafka.clients', 'shaded.com.linkedin.kafka.clients')
}
