/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.participant.protocol;

@SuppressWarnings("all")
public class ParticipantMessageKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"ParticipantMessageKey\",\"namespace\":\"com.linkedin.venice.participant.protocol\",\"fields\":[{\"name\":\"resourceName\",\"type\":\"string\"},{\"name\":\"messageType\",\"type\":\"int\",\"doc\":\"0 => KillPushJob\"}]}");
  public java.lang.CharSequence resourceName;
  /** 0 => KillPushJob */
  public int messageType;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return resourceName;
    case 1: return messageType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: resourceName = (java.lang.CharSequence)value$; break;
    case 1: messageType = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
