/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.etl;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VeniceKafkaDecodedRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VeniceKafkaDecodedRecord\",\"namespace\":\"com.linkedin.venice.etl\",\"fields\":[{\"name\":\"key\",\"type\":\"bytes\",\"doc\":\"Raw bytes of the key\"},{\"name\":\"value\",\"type\":\"bytes\",\"doc\":\"Raw bytes of the value\"},{\"name\":\"offset\",\"type\":\"long\",\"doc\":\"The offset of this record in Kafka\"},{\"name\":\"DELETED_TS\",\"type\":[\"null\",\"long\"],\"doc\":\"If the current record is a PUT, this field will be null; if it's a DELETE, this field will be the offset of the record in Kafka\",\"default\":null},{\"name\":\"metadata\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Metadata of the record; currently it contains the schemaId of the record\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Raw bytes of the key */
  @Deprecated public java.nio.ByteBuffer key;
  /** Raw bytes of the value */
  @Deprecated public java.nio.ByteBuffer value;
  /** The offset of this record in Kafka */
  @Deprecated public long offset;
  /** If the current record is a PUT, this field will be null; if it's a DELETE, this field will be the offset of the record in Kafka */
  @Deprecated public java.lang.Long DELETED_TS;
  /** Metadata of the record; currently it contains the schemaId of the record */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public VeniceKafkaDecodedRecord() {}

  /**
   * All-args constructor.
   */
  public VeniceKafkaDecodedRecord(java.nio.ByteBuffer key, java.nio.ByteBuffer value, java.lang.Long offset, java.lang.Long DELETED_TS, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata) {
    this.key = key;
    this.value = value;
    this.offset = offset;
    this.DELETED_TS = DELETED_TS;
    this.metadata = metadata;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return key;
    case 1: return value;
    case 2: return offset;
    case 3: return DELETED_TS;
    case 4: return metadata;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: key = (java.nio.ByteBuffer)value$; break;
    case 1: value = (java.nio.ByteBuffer)value$; break;
    case 2: offset = (java.lang.Long)value$; break;
    case 3: DELETED_TS = (java.lang.Long)value$; break;
    case 4: metadata = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
