/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.ingestion.protocol;

@SuppressWarnings("all")
public class IngestionTaskReport extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"IngestionTaskReport\",\"namespace\":\"com.linkedin.venice.ingestion.protocol\",\"fields\":[{\"name\":\"isEndOfPushReceived\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isComplete\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isError\",\"type\":\"boolean\",\"default\":false},{\"name\":\"isPositive\",\"type\":\"boolean\",\"doc\":\"A true/false flag to respond whether a partition is consuming\",\"default\":false},{\"name\":\"errorMessage\",\"type\":\"string\",\"default\":\"\"}]}");
  public boolean isEndOfPushReceived;
  public boolean isComplete;
  public boolean isError;
  /** A true/false flag to respond whether a partition is consuming */
  public boolean isPositive;
  public java.lang.CharSequence errorMessage;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return isEndOfPushReceived;
    case 1: return isComplete;
    case 2: return isError;
    case 3: return isPositive;
    case 4: return errorMessage;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: isEndOfPushReceived = (java.lang.Boolean)value$; break;
    case 1: isComplete = (java.lang.Boolean)value$; break;
    case 2: isError = (java.lang.Boolean)value$; break;
    case 3: isPositive = (java.lang.Boolean)value$; break;
    case 4: errorMessage = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
