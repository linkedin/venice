/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.ingestion.protocol;

@SuppressWarnings("all")
public class IngestionStorageMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"IngestionStorageMetadata\",\"namespace\":\"com.linkedin.venice.ingestion.protocol\",\"fields\":[{\"name\":\"topicName\",\"type\":\"string\"},{\"name\":\"partitionId\",\"type\":\"int\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"metadataUpdateType\",\"type\":\"int\",\"doc\":\"0 => PutOffsetRecord, 1 => ClearOffsetRecord, 2 => PutStoreVersionState, 3 => ClearStoreVersionState\"}]}");
  public java.lang.CharSequence topicName;
  public int partitionId;
  public java.nio.ByteBuffer payload;
  /** 0 => PutOffsetRecord, 1 => ClearOffsetRecord, 2 => PutStoreVersionState, 3 => ClearStoreVersionState */
  public int metadataUpdateType;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return topicName;
    case 1: return partitionId;
    case 2: return payload;
    case 3: return metadataUpdateType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: topicName = (java.lang.CharSequence)value$; break;
    case 1: partitionId = (java.lang.Integer)value$; break;
    case 2: payload = (java.nio.ByteBuffer)value$; break;
    case 3: metadataUpdateType = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
