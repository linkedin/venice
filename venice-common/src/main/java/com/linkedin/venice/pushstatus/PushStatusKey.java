/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.pushstatus;

@SuppressWarnings("all")
public class PushStatusKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"PushStatusKey\",\"namespace\":\"com.linkedin.venice.pushstatus\",\"fields\":[{\"name\":\"keyStrings\",\"type\":{\"type\":\"array\",\"items\":[\"int\",\"string\"]},\"doc\":\"Composite key. For a heartbeat message, this is a string containing [instanceId + app_name]. For full push status, this is [version, partitionId]. For incremental push status, it could be a combination of version, push id and partition id.\"},{\"name\":\"messageType\",\"type\":\"int\",\"doc\":\"0 -> Heartbeat Message, 1 -> Full Push, 2 -> Incremental Push.\"}]}");
  /** Composite key. For a heartbeat message, this is a string containing [instanceId + app_name]. For full push status, this is [version, partitionId]. For incremental push status, it could be a combination of version, push id and partition id. */
  public java.util.List<java.lang.Object> keyStrings;
  /** 0 -> Heartbeat Message, 1 -> Full Push, 2 -> Incremental Push. */
  public int messageType;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return keyStrings;
    case 1: return messageType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: keyStrings = (java.util.List<java.lang.Object>)value$; break;
    case 1: messageType = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
