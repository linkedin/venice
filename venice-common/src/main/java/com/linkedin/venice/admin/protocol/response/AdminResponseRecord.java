/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.admin.protocol.response;

@SuppressWarnings("all")
/** Response record for admin request, version 1 */
public class AdminResponseRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"AdminResponseRecord\",\"namespace\":\"com.linkedin.venice.admin.protocol.response\",\"fields\":[{\"name\":\"partitionConsumptionStates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ConsumptionStateSnapshot\",\"fields\":[{\"name\":\"partitionId\",\"type\":\"int\",\"doc\":\"The partition which this state snapshot belongs to.\",\"default\":-1},{\"name\":\"hybrid\",\"type\":\"boolean\",\"doc\":\"Whether the store is hybrid.\"},{\"name\":\"isIncrementalPushEnabled\",\"type\":\"boolean\",\"doc\":\"Whether the store is incremental push enabled.\",\"default\":false},{\"name\":\"offsetRecord\",\"type\":[\"null\",\"bytes\",\"string\"],\"doc\":\"Offset checkpoint info and DIV info\",\"default\":null},{\"name\":\"deferredWrite\",\"type\":\"boolean\",\"doc\":\"Whether deferred write mode is enabled currently\",\"default\":false},{\"name\":\"errorReported\",\"type\":\"boolean\",\"doc\":\"Whether error has already been reported\",\"default\":false},{\"name\":\"lagCaughtUp\",\"type\":\"boolean\",\"doc\":\"Whether lag has ever caught up; it doesn't always indicate the current lag status\",\"default\":false},{\"name\":\"completionReported\",\"type\":\"boolean\",\"doc\":\"Whether completion has been reported before\",\"default\":false},{\"name\":\"leaderState\",\"type\":\"string\",\"doc\":\"STANDBY; LEADER; IN_TRANSITION_FROM_STANDBY_TO_LEADER; PAUSE_TRANSITION_FROM_STANDBY_TO_LEADER\",\"default\":\"\"},{\"name\":\"isLatchReleased\",\"type\":\"boolean\",\"doc\":\"Whether transition latch is released\",\"default\":false},{\"name\":\"processedRecordNum\",\"type\":\"int\",\"doc\":\"How many records have been processed since last metric reports\",\"default\":0},{\"name\":\"processedRecordSize\",\"type\":\"int\",\"doc\":\"How much bytes have been processed since last metric reports\",\"default\":0},{\"name\":\"processedRecordSizeSinceLastSync\",\"type\":\"long\",\"doc\":\"How much bytes have been processed since last sync\",\"default\":0},{\"name\":\"consumeRemotely\",\"type\":\"boolean\",\"doc\":\"Whether the node is consuming remotely for this partition\",\"default\":false},{\"name\":\"latestMessageConsumptionTimestampInMs\",\"type\":\"long\",\"doc\":\"the last time when the node consumes any message for this partition\",\"default\":0}]}},\"doc\":\"Consumption states snapshots for the requested partitions\",\"default\":[]},{\"name\":\"storeVersionState\",\"type\":[\"null\",\"bytes\",\"string\"],\"doc\":\"Metadata for the version, including info like: sorted, chunked, compressionStrategy, TopicSwitch, etc\",\"default\":null},{\"name\":\"serverConfigs\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ServerConfigSnapshot\",\"fields\":[{\"name\":\"configMap\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"A map that contains all the configs in runtime\",\"default\":{}}]}],\"doc\":\"All server configs in runtime\",\"default\":null}]}");
  /** Consumption states snapshots for the requested partitions */
  public java.util.List<com.linkedin.venice.admin.protocol.response.ConsumptionStateSnapshot> partitionConsumptionStates;
  /** Metadata for the version, including info like: sorted, chunked, compressionStrategy, TopicSwitch, etc */
  public java.lang.Object storeVersionState;
  /** All server configs in runtime */
  public com.linkedin.venice.admin.protocol.response.ServerConfigSnapshot serverConfigs;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return partitionConsumptionStates;
    case 1: return storeVersionState;
    case 2: return serverConfigs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: partitionConsumptionStates = (java.util.List<com.linkedin.venice.admin.protocol.response.ConsumptionStateSnapshot>)value$; break;
    case 1: storeVersionState = (java.lang.Object)value$; break;
    case 2: serverConfigs = (com.linkedin.venice.admin.protocol.response.ServerConfigSnapshot)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
