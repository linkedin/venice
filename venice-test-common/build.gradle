import io.netifi.flatbuffers.plugin.tasks.FlatBuffers

plugins {
  id 'io.netifi.flatbuffers' version '1.0.6'
}

configurations {
  all {
    resolutionStrategy {
      force libraries.kafka
      force libraries.javax
    }
  }
  implementation {
    exclude group: 'org.apache.kafka'
    exclude group: 'org.mortbay.jetty', module: 'servlet-api'
  }
  jmhImplementation.extendsFrom testImplementation
  integrationTestImplementation.extendsFrom testImplementation
}

sourceSets {
  jmh {
    java.srcDirs = ['src/jmh/java']
  }

  integrationTest {
    java.srcDirs = ['src/integrationtest/java']
    resources.srcDirs = ['src/integrationtest/resources']
  }
}

dependencies {
  implementation project(':da-vinci-client')
  implementation project(':hadoop-to-venice-bridge')
  implementation project(':venice-brooklin')
  implementation project(':venice-common')
  implementation project(':venice-controller')
  implementation project(':venice-router')
  implementation project(':venice-samza')
  implementation project(':venice-schema-common')
  implementation project(':venice-server')
  implementation project(':venice-thin-client')

  implementation (libraries.d2) {
    exclude group: 'com.oracle', module: 'ojdbc14' // unused transitive dependencies, doesn't exist in repo
    // this will introduce another different mockito-all version
    exclude group: 'org.mockito', module: 'mockito-all'
  }

  implementation (libraries.brooklinTest) {
    exclude group: 'org.testng'
    exclude group: 'org.mockito' //brooklin tries to pull in Mockito 1, we depend on Mockito 2
    exclude group: 'org.apache.kafka' //brooklin tries to pull in Kafka 0.11, but we have not upgraded to that yet.
    exclude group: 'kafka' //brooklin tries to pull in Kafka 0.11, but we have not upgraded to that yet.
    exclude group: 'com.linkedin.linkedin-kafka-clients' //brooklin tries to pull in Kafka 0.11, but we have not upgraded to that yet.
  }

  implementation libraries.avroUtilCompatibilityHelper
  implementation libraries.avroUtilFastserde
  implementation libraries.brooklinKafka
  implementation libraries.brooklinKafkaTransport
  implementation libraries.conscrypt
  implementation libraries.hadoopCommon
  implementation libraries.helix
  implementation libraries.javax
  implementation libraries.kafka
  implementation libraries.kafkaClients
  implementation libraries.kafkaClientsTest
  implementation libraries.mockito
  implementation libraries.netty4Lnkd
  implementation libraries.rocksdbjni
  implementation libraries.routerApi
  implementation libraries.samzaApi
  implementation libraries.scalaLogging
  implementation libraries.spark
  implementation libraries.testng

  compileOnly libraries.flatbuffersJava // FlatBuffersPlugin implicitly adds output to main source set

  testImplementation (libraries.mapreduceClientJobClient) {
    exclude group: 'org.apache.avro'
    exclude group: 'javax.servlet'
  }
  testImplementation project(':venice-admin-tool')

  jmhAnnotationProcessor libraries.jmhGenerator
  jmhImplementation libraries.jmhCore
  jmhImplementation libraries.flatbuffersJava
}

task compileJmhFlatBuffers(type: FlatBuffers) {
  language = 'java'
  inputDir = file('src/jmh/flatbuffers')
  outputDir = file("$buildDir/generated/sources/flatbuffers/java/jmh")
}
sourceSets.jmh.java.srcDir(compileJmhFlatBuffers)

task jmh(type: JavaExec, dependsOn: jmhClasses) {
  main = 'org.openjdk.jmh.Main'
  classpath = sourceSets.jmh.runtimeClasspath
}

task integrationTest(type: Test) {
  mustRunAfter test
  classpath = sourceSets.integrationTest.runtimeClasspath
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  forkEvery = Integer.parseInt(project.properties.get('integrationTest.forkEvery', "$forkEvery"))
  maxParallelForks = Integer.parseInt(project.properties.get('integrationTest.maxParallelForks', "$maxParallelForks"))
}
check.dependsOn(integrationTest)

flakyTest {
  classpath += sourceSets.integrationTest.runtimeClasspath
  testClassesDirs += sourceSets.integrationTest.output.classesDirs
}
