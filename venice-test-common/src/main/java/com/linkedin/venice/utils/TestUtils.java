package com.linkedin.venice.utils;

import com.linkedin.security.ssl.access.control.SSLEngineComponentFactory;
import com.linkedin.security.ssl.access.control.SSLEngineComponentFactoryImpl;
import com.linkedin.venice.exceptions.VeniceException;
import com.linkedin.venice.helix.HelixInstanceConverter;
import com.linkedin.venice.meta.Instance;
import com.linkedin.venice.meta.OfflinePushStrategy;
import com.linkedin.venice.meta.PersistenceType;
import com.linkedin.venice.meta.ReadStrategy;
import com.linkedin.venice.meta.RoutingStrategy;
import com.linkedin.venice.meta.Store;
import java.util.concurrent.TimeUnit;
import java.util.function.BooleanSupplier;
import javax.validation.constraints.NotNull;

import com.linkedin.venice.offsets.OffsetRecord;
import org.apache.helix.HelixManager;
import org.apache.helix.HelixManagerFactory;
import org.apache.helix.InstanceType;
import org.apache.helix.participant.statemachine.StateModel;
import org.apache.helix.participant.statemachine.StateModelFactory;
import org.apache.kafka.clients.consumer.OffsetAndMetadata;


/**
 * General-purpose utility functions for tests.
 */
public class TestUtils {
  /** In milliseconds */
  private static final int WAIT_TIME_FOR_NON_DETERMINISTIC_ACTIONS = 30;

  public static String getUniqueString(String base) {
    return base + "-" + System.currentTimeMillis() + "-" + RandomGenUtils.getRandomIntWithIn(Integer.MAX_VALUE);
  }

  /**
   * To be used for tests when we need to wait for an async operation to complete.  Pass a timeout, and a labmda
   * for checking if the operation is complete.
   *
   * @param timeout amount of time to wait
   * @param timeoutUnits {@link TimeUnit} for the {@param timeout}
   * @param conditionToWaitFor A {@link BooleanSupplier} which should execute the non-deterministic action and
   *                           return true if it is successful, false otherwise.
   */
  public static void waitForNonDeterministicCompletion(long timeout, TimeUnit timeoutUnits, BooleanSupplier conditionToWaitFor){
    long timeoutTime = System.currentTimeMillis() + timeoutUnits.toMillis(timeout);
    while (!conditionToWaitFor.getAsBoolean()){
      if (System.currentTimeMillis() > timeoutTime){
        throw new RuntimeException("Operation did not complete in time");
      }
      Utils.sleep(WAIT_TIME_FOR_NON_DETERMINISTIC_ACTIONS);
    }
  }

  /**
   * To be used for tests when we need to wait for an async operation to complete. Pass a timeout, and a labmda
   * for checking if the operation is complete.
   *
   * @param timeout amount of time to wait
   * @param timeoutUnits {@link TimeUnit} for the {@param timeout}
   * @param assertionToWaitFor A {@link NonDeterministicAssertion} which should simply execute without exception
   *                           if it is successful, or throw an {@link AssertionError} otherwise.
   * @throws AssertionError throws the exception thrown by the {@link NonDeterministicAssertion} if the maximum
   *                        wait time has been exceeded.
   */
  public static void waitForNonDeterministicAssertion(long timeout,
                                                      TimeUnit timeoutUnits,
                                                      NonDeterministicAssertion assertionToWaitFor) throws AssertionError {
    long timeoutTime = System.currentTimeMillis() + timeoutUnits.toMillis(timeout);
    while (true) {
      try {
        assertionToWaitFor.execute();
        return;
      } catch (AssertionError ae) {
        if (System.currentTimeMillis() > timeoutTime) {
          throw ae;
        }
        Utils.sleep(WAIT_TIME_FOR_NON_DETERMINISTIC_ACTIONS);
      }
    }
  }

  public static Store createTestStore(@NotNull String name, @NotNull String owner, long createdTime) {
      return new Store(name, owner, createdTime, PersistenceType.IN_MEMORY, RoutingStrategy.CONSISTENT_HASH,
          ReadStrategy.ANY_OF_ONLINE, OfflinePushStrategy.WAIT_ALL_REPLICAS);
  }

  public interface NonDeterministicAssertion {
    void execute() throws AssertionError;
  }

  public static HelixManager getParticipant(String cluster, String nodeId, String zkAddress, int httpPort, String stateModelDef) {
    MockTestStateModelFactory stateModelFactory = new MockTestStateModelFactory();
    return getParticipant(cluster, nodeId, zkAddress, httpPort, stateModelFactory, stateModelDef);
  }

  public static HelixManager getParticipant(String cluster, String nodeId, String zkAddress, int httpPort,
      StateModelFactory<StateModel> stateModelFactory, String stateModelDef) {
    HelixManager participant =
        HelixManagerFactory.getZKHelixManager(cluster, nodeId, InstanceType.PARTICIPANT, zkAddress);
    participant.getStateMachineEngine()
        .registerStateModelFactory(stateModelDef,
            stateModelFactory);
    participant.setLiveInstanceInfoProvider(
        () -> HelixInstanceConverter.convertInstanceToZNRecord(new Instance(nodeId, Utils.getHostName(), httpPort)));
    return participant;
  }

  public static OffsetRecord getOffsetRecord(long offset) {
    return getOffsetRecord(offset, false);
  }

  public static OffsetRecord getOffsetRecord(long offset, boolean complete) {
    OffsetRecord offsetRecord = new OffsetRecord();
    offsetRecord.setOffset(offset);
    if (complete) {
      offsetRecord.complete();
    }
    return offsetRecord;
  }

  // Stole this data from Espresso tests, base64 encoded keys that were ripped off of EI boxes
  static final String KS_PASSWORD = "ThisIsNotTheProductionSecret";
  static final String STORAGE_KS_DATA = "";
  static final String ROUTER_KS_DATA = "";
  static final String CLIENT_KS_DATA = "";
  static final String CORRUPT_KS_DATA = "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\n";
  static final String NON_COMPATIBLE_KS_DATA = "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";

  public static SSLEngineComponentFactory getRouterSslFactory(){
    return getSslFactory(ROUTER_KS_DATA, KS_PASSWORD);
  }

  public static SSLEngineComponentFactory getClientSslFactory(){
    return getSslFactory(CLIENT_KS_DATA, KS_PASSWORD);
  }

  private static SSLEngineComponentFactory getSslFactory(String keyStoreData, String keyStorePassword){
    SSLEngineComponentFactoryImpl.Config sslConfig = new SSLEngineComponentFactoryImpl.Config();
    sslConfig.setKeyStoreData(keyStoreData); // expires in 2027 or something
    sslConfig.setKeyStorePassword(keyStorePassword);
    sslConfig.setKeyStoreType("JKS");
    sslConfig.setTrustStoreFilePath("/etc/riddler/cacerts"); // exists on all boxes at LinkedIn
    sslConfig.setTrustStoreFilePassword("changeit");
    sslConfig.setSslEnabled(true);
    try {
      return new SSLEngineComponentFactoryImpl(sslConfig);
    } catch (Exception e) {
      throw new VeniceException("Failed to create test ssl factory", e);
    }
  }
}
