/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.controller.kafka.protocol.admin;

@SuppressWarnings("all")
public class ConfigureNativeReplicationForCluster extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"ConfigureNativeReplicationForCluster\",\"namespace\":\"com.linkedin.venice.controller.kafka.protocol.admin\",\"fields\":[{\"name\":\"clusterName\",\"type\":\"string\"},{\"name\":\"storeType\",\"type\":\"string\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"nativeReplicationSourceRegion\",\"type\":[\"null\",\"string\"],\"doc\":\"The source region to be used when the store is running in Native Replication mode.\",\"default\":null},{\"name\":\"regionsFilter\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public java.lang.CharSequence clusterName;
  public java.lang.CharSequence storeType;
  public boolean enabled;
  /** The source region to be used when the store is running in Native Replication mode. */
  public java.lang.CharSequence nativeReplicationSourceRegion;
  public java.lang.CharSequence regionsFilter;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clusterName;
    case 1: return storeType;
    case 2: return enabled;
    case 3: return nativeReplicationSourceRegion;
    case 4: return regionsFilter;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clusterName = (java.lang.CharSequence)value$; break;
    case 1: storeType = (java.lang.CharSequence)value$; break;
    case 2: enabled = (java.lang.Boolean)value$; break;
    case 3: nativeReplicationSourceRegion = (java.lang.CharSequence)value$; break;
    case 4: regionsFilter = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
