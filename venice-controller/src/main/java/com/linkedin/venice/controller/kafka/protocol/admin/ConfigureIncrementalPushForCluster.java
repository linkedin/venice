/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.venice.controller.kafka.protocol.admin;

@SuppressWarnings("all")
/** A command to migrate all incremental push stores in a cluster to a specific incremental push policy. */
public class ConfigureIncrementalPushForCluster extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"ConfigureIncrementalPushForCluster\",\"namespace\":\"com.linkedin.venice.controller.kafka.protocol.admin\",\"fields\":[{\"name\":\"clusterName\",\"type\":\"string\"},{\"name\":\"incrementalPushPolicyToFilter\",\"type\":\"int\",\"doc\":\"If this batch update command is trying to configure existing incremental push store type, their incremental push policy should also match this filter before the batch update command applies any change to them. Default value is -1, meaning there is no filter.\",\"default\":-1},{\"name\":\"incrementalPushPolicyToApply\",\"type\":\"int\",\"doc\":\"This field will determine what incremental push policy will be applied to the selected stores. Default value is 1, which is the INCREMENTAL_PUSH_SAME_AS_REAL_TIME policy\",\"default\":1},{\"name\":\"regionsFilter\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public java.lang.CharSequence clusterName;
  /** If this batch update command is trying to configure existing incremental push store type, their incremental push policy should also match this filter before the batch update command applies any change to them. Default value is -1, meaning there is no filter. */
  public int incrementalPushPolicyToFilter;
  /** This field will determine what incremental push policy will be applied to the selected stores. Default value is 1, which is the INCREMENTAL_PUSH_SAME_AS_REAL_TIME policy */
  public int incrementalPushPolicyToApply;
  public java.lang.CharSequence regionsFilter;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clusterName;
    case 1: return incrementalPushPolicyToFilter;
    case 2: return incrementalPushPolicyToApply;
    case 3: return regionsFilter;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clusterName = (java.lang.CharSequence)value$; break;
    case 1: incrementalPushPolicyToFilter = (java.lang.Integer)value$; break;
    case 2: incrementalPushPolicyToApply = (java.lang.Integer)value$; break;
    case 3: regionsFilter = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
}
