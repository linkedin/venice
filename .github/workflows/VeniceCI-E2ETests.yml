# Auto-generated file. Do not edit manually!
#
# To alter these flows, edit:
#
#     internal/venice-test-common/build.gradle
#
# To regenerate, run:
#
#     ./gradlew generateGHCI

name: E2ETests

on: [push, pull_request, workflow_dispatch]

jobs:
  IntegrationTests_A:
    name: IntegrationTests_A
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_A
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_A
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_B:
    name: IntegrationTests_B
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_B
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_B
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_C:
    name: IntegrationTests_C
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_C
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_C
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_D:
    name: IntegrationTests_D
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_D
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_D
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_E:
    name: IntegrationTests_E
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_E
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_E
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_F:
    name: IntegrationTests_F
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_F
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_F
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_G:
    name: IntegrationTests_G
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_G
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_G
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_H:
    name: IntegrationTests_H
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_H
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_H
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_I:
    name: IntegrationTests_I
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_I
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_I
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_J:
    name: IntegrationTests_J
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_J
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_J
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_K:
    name: IntegrationTests_K
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_K
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_K
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_L:
    name: IntegrationTests_L
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_L
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_L
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_M:
    name: IntegrationTests_M
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_M
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_M
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_N:
    name: IntegrationTests_N
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_N
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_N
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_O:
    name: IntegrationTests_O
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_O
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_O
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_P:
    name: IntegrationTests_P
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_P
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_P
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_Q:
    name: IntegrationTests_Q
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_Q
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_Q
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_R:
    name: IntegrationTests_R
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_R
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_R
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_S:
    name: IntegrationTests_S
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_S
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_S
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_T:
    name: IntegrationTests_T
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_T
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_T
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_U:
    name: IntegrationTests_U
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_U
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_U
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_V:
    name: IntegrationTests_V
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_V
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_V
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_W:
    name: IntegrationTests_W
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_W
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_W
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_X:
    name: IntegrationTests_X
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_X
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_X
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_Y:
    name: IntegrationTests_Y
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_Y
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_Y
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  IntegrationTests_Z:
    name: IntegrationTests_Z
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    permissions:
     id-token: write
     contents: read
     checks: write
    timeout-minutes: 120
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-jdk${{ matrix.jdk }}-IntegrationTests_Z
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Integration Tests
        run: ./gradlew --continue --no-daemon -DforkEvery=1 -DmaxParallelForks=1 integrationTests_Z
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository }}"
          echo "event name: ${{ github.event_name }}"
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Generate Fork Repo Test Reports
        if: ${{ (github.repository_owner != 'linkedin') && (success() || failure()) }}
        uses: dorny/test-reporter@v1.9.1
        env:
         NODE_OPTIONS: --max-old-space-size=9182
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         name: ${{ github.job }} Test Reports       # Name where it report the test results
         path: '**/TEST-*.xml'
         fail-on-error: 'false'
         max-annotations: '10'
         list-tests: 'all'
         list-suites: 'all'
         reporter: java-junit
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  E2ETestsCompletion:
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    needs: [IntegrationTests_A, IntegrationTests_B, IntegrationTests_C, IntegrationTests_D, IntegrationTests_E, IntegrationTests_F, IntegrationTests_G, IntegrationTests_H, IntegrationTests_I, IntegrationTests_J, IntegrationTests_K, IntegrationTests_L, IntegrationTests_M, IntegrationTests_N, IntegrationTests_O, IntegrationTests_P, IntegrationTests_Q, IntegrationTests_R, IntegrationTests_S, IntegrationTests_T, IntegrationTests_U, IntegrationTests_V, IntegrationTests_W, IntegrationTests_X, IntegrationTests_Y, IntegrationTests_Z]
    timeout-minutes: 20
    steps:
    - name: NoOp
      shell: bash
      run: |
        echo "Successfully ran all E2E tests!"


