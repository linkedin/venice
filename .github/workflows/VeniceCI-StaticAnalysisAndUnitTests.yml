# GitHub Actions workflow for running static analysis and unit tests
name: AnalyseStatiqueEtTestsUnitaires

on: [push, pull_request, workflow_dispatch]

jobs:
  ValidateGradleWrapper:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

  StaticAnalysis:
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Static Analysis
        run: ./gradlew --continue --no-daemon clean check --parallel -Pspotallbugs -x test -x integrationTest -x jacocoTestCoverageVerification
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  UnitTestsAndCodeCoverage:
    strategy:
      fail-fast: false
      matrix:
        jdk: [8, 11, 17]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Unit Tests with Code Coverage
        run: ./gradlew  -x :internal:venice-avro-compatibility-test:test jacocoTestCoverageVerification diffCoverage --continue
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-jdk${{ matrix.jdk }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  StaticAnalysisAndUnitTestsCompletionCheck:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    needs: [ValidateGradleWrapper, StaticAnalysis, UnitTestsAndCodeCoverage]
    timeout-minutes: 120
    steps:
      - name: AllIsWell
        shell: bash
        run: |
          echo "LGTM!"



