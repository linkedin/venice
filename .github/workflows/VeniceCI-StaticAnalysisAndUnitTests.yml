# GitHub Actions workflow for running static analysis and unit tests
name: AnalyseStatiqueEtTestsUnitaires

on: [push, pull_request, workflow_dispatch]

jobs:
  ValidateGradleWrapper:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
     group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
     cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

  StaticAnalysis:
    strategy:
      fail-fast: false
      matrix:
        jdk: [17]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'gradle'
      - shell: bash
        run: |
          git remote set-head origin --auto
          git remote add upstream https://github.com/linkedin/venice
          git fetch upstream
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Static Analysis
        run: ./gradlew --continue --no-daemon clean check --parallel -Pspotallbugs -x test -x integrationTest -x jacocoTestCoverageVerification
      - name: Package Build Artifacts
        if: success() || failure()
        shell: bash
        run: |
          mkdir ${{ github.job }}-artifacts
          find . -path "**/build/reports/*" -or -path "**/build/test-results/*" > artifacts.list
          rsync -R --files-from=artifacts.list . ${{ github.job }}-artifacts
          tar -zcvf ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz ${{ github.job }}-artifacts
      - name: Upload Build Artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}
          path: ${{ github.job }}-jdk${{ matrix.jdk }}-logs.tar.gz
          retention-days: 30

  Clients:
   uses: ./.github/workflows/UnitTests-core.yml
   with:
    artifact_suffix: clients
    arg: :clients:da-vinci-client:jacocoTestCoverageVerification :clients:da-vinci-client:diffCoverage
      :clients:venice-admin-tool:jacocoTestCoverageVerification :clients:venice-admin-tool:diffCoverage
      :clients:venice-producer:jacocoTestCoverageVerification :clients:venice-producer:diffCoverage
      :integrations:venice-pulsar:jacocoTestCoverageVerification :integrations:venice-pulsar:diffCoverage
      :clients:venice-client:jacocoTestCoverageVerification :clients:venice-client:diffCoverage
      :clients:venice-push-job:jacocoTestCoverageVerification :clients:venice-push-job:diffCoverage
      :integrations:venice-samza:jacocoTestCoverageVerification :integrations:venice-samza:diffCoverage
      :clients:venice-thin-client:jacocoTestCoverageVerification :clients:venice-thin-client:diffCoverage --continue

  Internal:
   uses: ./.github/workflows/UnitTests-core.yml
   with:
    artifact_suffix: internal
    arg: :internal:venice-client-common:jacocoTestCoverageVerification :internal:venice-client-common:diffCoverage
     :internal:venice-common:jacocoTestCoverageVerification :internal:venice-common:diffCoverage
     :internal:venice-jdk-compatibility-test:jacocoTestCoverageVerification :internal:venice-jdk-compatibility-test:diffCoverage
     :internal:venice-test-common:jacocoTestCoverageVerification :internal:venice-test-common:diffCoverage --continue


  Services:
    uses: ./.github/workflows/UnitTests-core.yml
    with:
      artifact_suffix: services
      arg: :services:venice-controller:jacocoTestCoverageVerification :services:venice-controller:diffCoverage
       :services:venice-router:jacocoTestCoverageVerification :services:venice-router:diffCoverage
       :services:venice-server:jacocoTestCoverageVerification :services:venice-server:diffCoverage --continue

  StaticAnalysisAndUnitTestsCompletionCheck:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    needs: [ValidateGradleWrapper, StaticAnalysis, Clients, Internal, Services]
    timeout-minutes: 120
    if: success() || failure()  # Always run this job, regardless of previous job status
    steps:
      - name: Check previous job statuses
        run: |
         if [ "${{ needs.ValidateGradleWrapper.result }}" != "success" ]; then
           echo "ValidateGradleWrapper failed."
           exit 1
         fi
         if [ "${{ needs.StaticAnalysis.result }}" != "success" ]; then
           echo "StaticAnalysis failed."
           exit 1
         fi
         if [ "${{ needs.Clients.result }}" != "success" ]; then
           echo "Clients module unit tests failed."
           exit 1
         fi
         if [ "${{ needs.Internal.result }}" != "success" ]; then
           echo "Internal module unit tests failed."
           exit 1
         fi
         if [ "${{ needs.Services.result }}" != "success" ]; then
           echo "Services module unit tests failed."
           exit 1
         fi
      # If all previous jobs were successful, proceed
      - name: Final Completion Check
        run: echo "All checks passed successfully!"



