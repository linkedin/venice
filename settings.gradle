pluginManagement {
  repositories {
    ivy { // TODO: remove this before open-sourcing
      url 'http://artifactory.corp.linkedin.com:8081/artifactory/release/'
      allowInsecureProtocol = true
      patternLayout {
        ivy '[organisation]/[module]/[revision]/[module]-[revision].ivy'
        artifact '[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]'
        m2compatible = true
      }
    }
    mavenCentral() // when build fails, move this to first and then build, then move it back and build should work
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
}

buildscript {
  dependencies {
    classpath 'com.github.spotbugs.snom:spotbugs-gradle-plugin:4.8.0'
    classpath 'org.gradle:test-retry-gradle-plugin:1.3.2'
  }
}

plugins {
  id 'com.gradle.enterprise' version '3.7'
}

gradleEnterprise {
  server = System.getProperty('buildScanServer', 'Set systemProp.buildScanServer in ~/.gradle/gradle.properties')
  buildScan {
    def commitId = 'git rev-parse --verify HEAD'.execute().text.trim()
    value 'CommitId', commitId
  }
}

include 'da-vinci-client'
include 'hadoop-to-venice-bridge'
include 'venice-admin-tool'
include 'venice-client'
include 'venice-common'
include 'venice-compatibility-test'
include 'venice-consumer'
include 'venice-controller'
include 'venice-router'
include 'venice-samza'
include 'venice-schema-common'
include 'venice-server'
include 'venice-test-common'
include 'venice-thin-client'
