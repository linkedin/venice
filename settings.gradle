pluginManagement {
  repositories {
    // TODO: remove this before open-sourcing
    ivy {
      url 'http://artifactory.corp.linkedin.com:8081/artifactory/release/'
      allowInsecureProtocol = true
      patternLayout {
        ivy '[organisation]/[module]/[revision]/[module]-[revision].ivy'
        artifact '[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]'
        m2compatible = true
      }
      metadataSources.ignoreGradleMetadataRedirection = true
    }
  }
}

plugins {
  id 'com.gradle.enterprise' version '3.10'
}

gradleEnterprise {
  server = System.getProperty('buildScanServer', 'Set systemProp.buildScanServer in ~/.gradle/gradle.properties')
  buildScan {
    value 'GIT_BRANCH', 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    value 'GIT_COMMIT', 'git rev-parse --verify HEAD'.execute().text.trim()
    def status = 'git diff --name-status origin/master'.execute().text.trim()
    if (status) {
      tag 'dirty'
      value 'GIT_STATUS', status
    }
  }
}

dependencyResolutionManagement {
  repositories.addAll(pluginManagement.repositories)
}

include 'da-vinci-client'
include 'hadoop-to-venice-bridge'
include 'venice-admin-tool'
include 'venice-client'
include 'venice-common'
include 'venice-compatibility-test'
include 'venice-consumer'
include 'venice-controller'
include 'venice-router'
include 'venice-samza'
include 'venice-schema-common'
include 'venice-server'
include 'venice-test-common'
include 'venice-thin-client'
