pluginManagement {
  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url  "https://linkedin.jfrog.io/artifactory/open-source"
    }
    gradlePluginPortal()
  }
}

plugins {
  id 'com.gradle.enterprise' version '3.10'
}

apply from: "$rootDir/gradle/helper/git.gradle"

gradleEnterprise {
  server = System.getProperty('buildScanServer', 'Set systemProp.buildScanServer in ~/.gradle/gradle.properties')

  def status = git.getFileDiffStatus()
  buildScan {
    value 'GIT_BRANCH', "${git.getBranch()}"
    value 'GIT_COMMIT', "${git.getCommitHash()}"
    value 'GIT_COMMIT_TITLE', "${git.getCommitTitle()}"
    if (status) {
      tag 'dirty'
      value 'GIT_STATUS', status
    }
  }
}

dependencyResolutionManagement {
  repositories.addAll(pluginManagement.repositories)
}

// Client modules
include 'clients:da-vinci-client'
include 'clients:venice-admin-tool'
include 'clients:venice-client'
include 'clients:venice-producer'
include 'clients:venice-push-job'
include 'clients:venice-thin-client'

// Service modules
include 'services:venice-controller'
include 'services:venice-router'
include 'services:venice-server'
include 'services:venice-standalone'

// Internal modules
include 'internal:venice-avro-compatibility-test'
include 'internal:venice-client-common'
include 'internal:venice-common'
include 'internal:venice-jdk-compatibility-test'
include 'internal:venice-test-common'

// Alpini modules
include 'internal:alpini:common:alpini-common-base'
include 'internal:alpini:common:alpini-common-io'
include 'internal:alpini:netty4:alpini-netty4-base'
include 'internal:alpini:router:alpini-router-api'
include 'internal:alpini:router:alpini-router-base'
include 'internal:alpini:router:alpini-router-impl'

// 3rd-party system integration modules
include 'integrations:venice-beam'
include 'integrations:venice-duckdb'
include 'integrations:venice-pulsar'
include 'integrations:venice-samza'

// integration tests
include 'tests:venice-pulsar-test'

// Depend-all module
include 'all-modules'
