apply plugin: 'application'

mainClassName = "com.linkedin.venice.router.RouterServer"

installApp.dependsOn test

task buildJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.linkedin.venice.router.RouterServer',
            'Implementation-Title': 'Venice Router',
            'Implementation-Version': version
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar {
    manifest {
        attributes 'Main-Class': 'com.linkedin.venice.router.RouterServer',
            'Implementation-Title': 'Venice Router',
            'Implementation-Version': version
    }
}

dependencies {
    compile libraries.routerApi
    compile libraries.routerImpl
    compile libraries.asyncHttpClient
    compile project(':venice-common')
    compile (libraries.d2){
        exclude group: 'com.oracle', module: 'ojdbc14' /* unused transitive dependencies, doesnt exist in repo */
        // this will introduce another different mockito-all version
        exclude group: 'org.mockito', module: 'mockito-all'
    }

    testCompile project(':venice-router')
    testCompile project(':venice-thin-client')
}

configurations.all {
    // Router dependencies import from "org.jboss.netty" and we want them to use "io.netty"
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == "org.jboss.netty")
        {
            details.useTarget group: "io.netty", name: details.requested.name, version: "3.9.6.Final"
        }
    }

}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

test {
    useTestNG()
}
